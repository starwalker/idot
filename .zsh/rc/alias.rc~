# -*- shell-script -*-x 
# vim: set syntax=zsh:
# $Id: alias.rc 44 2005-08-09 14:50:41Z asyd $

# I prefer interactive mode
alias mv="mv -iv"
alias rm="rm -iv"
alias cp="cp -iv"
alias ll="ls -FC --color=auto"
alias la="ls -A"
alias lh="ls -Alh"
alias lsd='ls -ld *(-/DN)'
alias df="df -h"
alias dh="dh -h"
alias del="mv -ft $HOME/.trash" 
alias dirs="dirs -v"
alias hist="history | grep"

alias pscpu='ps -eo pcpu,nice,stat,time,pid,cmd --sort=-pcpu,-time \
             | sed "/^ 0.0 /d"'
alias psmem='ps -eo rss,vsz,pid,cmd --sort=-rss,-vsz \
             | awk "{ if (\$1 > 10000) print }"'
# facts of the day
alias today='grep -h -d skip `date +%m/%d` /usr/share/calendar/*'

# Commands frequency counts
alias cmdfreq='cut -d " " -f 1 < $HISTFILE | sort | uniq -c | sort -nr | head -n 10'

# zsh corret clea to flea
[[ -x `which flea` ]] && alias clea="clear"

[[ -x $(which vim) ]] && alias vi="vim"

# start mutt with list mailboxes
[[ -x `which mutt` ]] && alias mutt="mutt -y"

# do a du -hs on each dir on current path
alias lsdir="for dir in *;do;if [ -d \$dir ];then;du -hsL \$dir 2>/dev/null;fi;done"

# misc
[[ -x `which makepasswd` ]] && alias makepasswd="makepasswd | tr A-Z a-z"

# Minicom (serial console rulez)
[[ -x `which minicom` ]] && alias minicom="minicom -o" 

# Aterm 
[[ -x `which aterm` ]] && alias aterm="aterm -bg black -fg AntiqueWhite +sb --geometry 110x48+112+32"

# ping (since control-c don't work for break ping)
alias ping="ping -c 3"

# IPv6 Stuff
alias netstat6="netstat -A inet6"

# Indent
[[ -x `which indent` ]] && alias indent="indent -kr"

# acpi (show all available informations)
[[ -x `which acpi` ]] && alias acpi="acpi -V"

# Etags
[[ -x `which etags` ]] && alias etags="etags --members"

# rdesktop
[[ -x `which rdesktop` ]] && alias rdesktop="rdesktop -u Administrator -a 8 -g 800x600 -k fr"

alias gnus='emacs -f gnus -nw'

alias -s log="tail -f"
alias -s conf="vim"

alias -s pem="openssl x509 -text -noout -in"
alias -s req="openssl req -text -in"

ssh_key_manage() {
	if [[ -x `which keychain` ]] && [ -r ~/.ssh/id_?sa ] ; then
		# run keychain
		keychain --nogui ~/.ssh/id_?sa
		[[ -r ~/.ssh-agent-`hostname` ]] && . ~/.ssh-agent-`hostname`
		[[ -r ~/.keychain/`hostname`-sh ]] &&  source ~/.keychain/`hostname`-sh
	else
		if [ -x $(which ssh-agent) -a -f $HOME/.ssh/id_?sa ]; then
			if [[ -r $HOME/.ssh/agent-pid ]] ; then
				if [[ -d /proc/$(< $HOME/.ssh/agent-pid) ]] ; then
					source $HOME/.ssh/agent
				else 
					ssh-agent -s > $HOME/.ssh/agent
					source $HOME/.ssh/agent
					echo $SSH_AGENT_PID > $HOME/.ssh/agent-pid
					ssh-add $HOME/.ssh/id_?sa
				fi	
			else 
				ssh-agent -s > $HOME/.ssh/agent
				source $HOME/.ssh/agent
				echo $SSH_AGENT_PID > $HOME/.ssh/agent-pid
				ssh-add $HOME/.ssh/id_?sa
			fi
		fi
	fi
}

# ssh key management
if [[ "$USER" != "root" ]]; then
	ssh_key_manage
fi

# cron / fcronb
if [[ -x $(which -p fcron) ]]; then
	alias crontab="fcrontab"
fi

return 0
